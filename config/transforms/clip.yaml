training:
  - _target_: torchvision.transforms.Resize
    size: ${aff_detection.img_size}
    interpolation: bicubic
  - _target_: torchvision.transforms.CenterCrop
    size: ${aff_detection.img_size}
  # - _target_: affordance.dataloader.transforms.ColorTransform
  #   contrast: 0.05
  #   brightness: 0.05
  #   hue: 0.02
  #   prob: 1
  - _target_: affordance.dataloader.transforms.ScaleImageTensor  # Scale 0-255 to 0-1
  - _target_: torchvision.transforms.Normalize
    mean: [0.48145466, 0.4578275, 0.40821073]
    std: [0.26862954, 0.26130258, 0.27577711]

validation:
  - _target_: torchvision.transforms.Resize
    size: ${aff_detection.img_size}
    interpolation: 'bicubic'
  - _target_: torchvision.transforms.CenterCrop
    size: ${aff_detection.img_size}
  - _target_: affordance.dataloader.transforms.ScaleImageTensor  # Scale 0-255 to 0-1
  - _target_: torchvision.transforms.Normalize
    mean: [0.48145466, 0.4578275, 0.40821073]
    std: [0.26862954, 0.26130258, 0.27577711]
